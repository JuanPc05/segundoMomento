* {

    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {

    margin-left: 2.5rem;
    margin-right: 2.5rem;
    font-family: 'Times New Roman', Times, serif;

}



img {
    max-width: 100%;
    height: auto;
}

.cabecera {
    position: relative;
    background-image: url(src/images/banner.jpg);
    background-position: center;
    background-repeat: repeat;
    background-size: contain;
    width: 100%;
    min-height: 15.625rem;
}

.cabecera h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 3rem;
    text-shadow: 2px 2px 4px #000000;
}

.navegacion {
    /* Aquí empiezo a utilizar la propiedad display: flex que me indica como se veran los elementos en pantalla, flex nos da mayor flexibilidad sobre los elementos, desde la forma en que se distribuyen hasta como se ven */
    display: flex;
    justify-content: center;
    /* Recordar que el gap es la distancia entre los elementos que se encuentran dentro del flex */
    gap: 2rem;
}

.navegacion a {
    text-decoration: none;
    color: #81d4a9;
    font-weight: bold;
    font-size: 1.2rem;
    /* En este caso la propiedad transition le esta diciendo al css que en algún momento se presentará una cambio dentro del elemento, el cual se aplicará con el nombre de transform */
    transition: transform 0.3s ease;
}

.navegacion a:hover {
    /* Aplico el cambio de escala */
    transform: scale(1.2);
    color: #f57c00;
    text-shadow: 5px 10px 15px gray;
}


.contenedor {
    /* La propiedad display se define para el elemento padre, que lo transferirá a todos sus hijos de esta forma logro que cada elemento se distribuya como yo quiero */
    display: flex;
    min-height: 40vh;
    min-width: 100%;
    gap: 15px;
    margin-bottom: 2.5rem;
    /* le doy un fondo para poder visualizarlo de mejor forma */
    background-color: rgba(111, 111, 111, 0.132);
}


.izquierda {
    border: 1px solid black;
    width: 75%;
    background-image: url(src/images/background.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    border: 1px solid black;
    min-height: 200vh;
    gap: .625rem;
    /* recordar que no tengo que usar nuevamente display porque este pertenece a su elemento padre, la propiedad flex recibe multiples valores, en este caso le pide que se adapte tanto como se lo permita su contenedor */
    flex-grow: 1;
}

.derecha {
    display: flex;
    flex-direction: column;
    position: relative;
    /* nuevamente utilizo el border solo para identificar que cada elemenento este donde debería */
    border: 1px solid black;
    min-height: 20vh;
    gap: .625rem;
    margin-right: .625rem;
    width: 25%;
}


/* .item2 {
    position: sticky;
    width: 100%;
    border: 1px solid black;
    min-height: 20vh;
    background-image: url(src/images/Colombia_aqui-todo-florece.jpg);
    gap: .625rem;
    flex-grow: 1;
} */

.item2 {
    position: sticky;
    top: 0;
    width: 100%;
    height: 30vh;
    min-height: unset;
    background-image: url(src/images/Colombia_aqui-todo-florece.jpg);
    background-size: cover;
    background-position: center;
}


footer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(111, 111, 111, 0.589);
    color: antiquewhite;
    padding: 1.875rem;
}