* {

    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Variables para ajustar tamaños fácilmente */
:root {
    --subtitulo-font-size: 2.8rem; /* tamaño del texto en .subtitulo */
    --avatar-size: 300px;       /* tamaño del avatar en .subtitulo .hijo2 img */
    --parrafo-bg-color: rgba(0, 0, 0, 0.623); /* fondo negro casi opaco */
    --parrafo-padding: 1rem;
    --parrafo-font-size: 1.25rem;
    --imagen-opacity: 0.5;
    --parrafo-text-color: #ffffff;
    --imagen-border-color: #000000;
    --base-font-size: 18px;
}

html { font-size: var(--base-font-size); }

body {

    margin-left: 2.5rem;
    margin-right: 2.5rem;
    font-family: 'Times New Roman', Times, serif;
    background-image: url(src/images/background.jpg);

}



img {
    max-width: 100%;
    height: auto;
}

.cabecera {
    position: relative;
    background-image: url(src/images/banner.jpg);
    background-position: center;
    background-repeat: repeat;
    background-size: contain;
    width: 100%;
    min-height: 15.625rem;
}

.cabecera h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 3rem;
    text-shadow: 2px 2px 4px #000000;
}

.navegacion {
    /* Aquí empiezo a utilizar la propiedad display: flex que me indica como se veran los elementos en pantalla, flex nos da mayor flexibilidad sobre los elementos, desde la forma en que se distribuyen hasta como se ven */
    display: flex;
    justify-content: center;
    /* Recordar que el gap es la distancia entre los elementos que se encuentran dentro del flex */
    gap: 2rem;
}

.navegacion a {
    text-decoration: none;
    color: #03110a;
    font-weight: bold;
    font-size: 1.4rem;
    /* En este caso la propiedad transition le esta diciendo al css que en algún momento se presentará una cambio dentro del elemento, el cual se aplicará con el nombre de transform */
    transition: transform 0.3s ease;
}

.navegacion a:hover {
    /* Aplico el cambio de escala */
    transform: scale(1.2);
    color: #f57c00;
    text-shadow: 5px 10px 15px gray;
}


.contenedor {
    /* La propiedad display se define para el elemento padre, que lo transferirá a todos sus hijos de esta forma logro que cada elemento se distribuya como yo quiero */
    display: flex;
    min-height: 40vh;
    min-width: 100%;
    gap: 15px;
    margin-bottom: 2.5rem;
    /* le doy un fondo para poder visualizarlo de mejor forma */
    background-color: rgba(111, 111, 111, 0.132);
}


.izquierda {
    border: 1px solid black;
    width: 60%;
    padding-bottom: 3.125rem;
    background-repeat: no-repeat;
    background-size: cover;
    border: 1px solid black;
    min-height: 150vh;
    gap: .625rem;
    /* recordar que no tengo que usar nuevamente display porque este pertenece a su elemento padre, la propiedad flex recibe multiples valores, en este caso le pide que se adapte tanto como se lo permita su contenedor */
    flex-grow: 1;
}

.derecha {
    display: flex;
    flex-direction: column;
    position: relative;
    /* nuevamente utilizo el border solo para identificar que cada elemenento este donde debería */
  /*   border: 1px solid black; */
    min-height: 20vh;
    gap: .625rem;
    margin-right: .625rem;
    width: 25%;
}



.item2 {
    position: sticky;
    top: 0;
    width: 100%;
    height: 30vh;
    min-height: unset;
    background-image: url(src/images/Colombia_aqui-todo-florece.jpg);
    background-size: cover;
    background-position: center;
}

.derecha a {
    font-size: 0.8rem;
    color: white;
    text-decoration: none;
}


footer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(111, 111, 111, 0.589);
    color: antiquewhite;
    padding: 1.875rem;
}



.contenidos {
   display: flex;
   gap: 15px;
   justify-content: center;
   align-items: center;
   margin-top: 40px;
   margin-bottom: 40px;
    flex-wrap: wrap;

}


.imagen {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 1.25rem;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(26, 22, 22, 0.405);
}


.subtitulo {
    /* Hacer que subtítulo apile su contenido en forma vertical */
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-top: 1.25rem;
    font-size: var(--subtitulo-font-size);
    color: #444;
    gap: 0.75rem;
    font-weight: 700; /* letras más gruesas */
}

.subtitulo .hijo1,
.subtitulo .hijo2,
.subtitulo .hijo3 {
    width: 100%;
}

.subtitulo .hijo1 {
    color: #5f9c53;
    font-weight: 700;
}

.subtitulo .hijo2 {
    display: flex;
    align-items: center;
    justify-content: center;
}

.subtitulo .hijo2 img {
    border-radius: 50%;
    width: var(--avatar-size);
    max-width: 90%;
    height: auto;
    border: 2px solid var(--imagen-border-color);
    display: block;
    opacity: var(--imagen-opacity);
}

.imagen img {
    opacity: var(--imagen-opacity);
}

.subtitulo .hijo3 {
    color: #5f9c53;
    text-align: center;
    font-weight: 700;
}

/* Nota: se eliminó el media query para forzar siempre la disposición vertical de .subtitulo */

.parrafo {
    text-align: justify;
    font-size: var(--parrafo-font-size);
    margin: 1.25rem;
    line-height: 1.6;
    color: var(--parrafo-text-color);
    background: var(--parrafo-bg-color);
    padding: var(--parrafo-padding);
    border-radius: 8px;
}
